{"ast":null,"code":"var _jsxFileName = \"/Users/akshaykulkarni/Documents/stutor/stutor/src/components/NewDisc/NewDisc.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./NewDisc.css\";\nimport axios from \"axios\";\nimport DateTimePicker from 'react-datetime-picker';\n\nfunction NewDisc(props) {\n  let newSubjectOptions = [];\n  let newPlaces = [];\n  const [subjectOptions, setSubjectOptions] = useState([]);\n  const [placeOptions, setPlaceOptions] = useState([]);\n  const [date, setDate] = useState(new Date());\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/users/getId/\" + props.match.params.id.slice(3)).then(userResp => {\n      setUserData(userResp.data[0]);\n      axios.get(\"http://localhost:5000/branches/\" + userResp.data[0].branch).then(res => {\n        let subjectIds = res.data[0].subjects;\n\n        async function retreiveSubdata() {\n          return new Promise((resolve, reject) => {\n            subjectIds.forEach((sId, index) => {\n              axios.get(\"http://localhost:5000/subjects/\" + sId).then(sres => {\n                newSubjectOptions.push(React.createElement(\"option\", {\n                  key: sres.data[0]._id,\n                  value: sres.data[0]._id,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 25\n                  },\n                  __self: this\n                }, sres.data[0].subject_name + \"-\" + sres.data[0].subject_code));\n\n                if (index === subjectIds.length - 1) {\n                  setSubjectOptions(newSubjectOptions);\n                  resolve(\"done\");\n                }\n              });\n            });\n          });\n        }\n\n        async function retreivePlaces() {\n          return new Promise((resolve, reject) => {\n            axios.get(\"http://localhost:5000/places/getPlaces/\" + userResp.data[0].college).then(resp => {\n              resp.data.forEach((place, index) => {\n                newPlaces.push(React.createElement(\"option\", {\n                  key: place._id,\n                  value: place._id,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 39\n                  },\n                  __self: this\n                }, place.place));\n\n                if (index === resp.data.length - 1) {\n                  setPlaceOptions(newPlaces);\n                  resolve(\"done\");\n                }\n              });\n            });\n          });\n        }\n\n        retreiveSubdata();\n        retreivePlaces();\n      });\n    });\n  }, []);\n\n  function handleSubmit(e) {\n    document.getElementById(\"discerror\").style.display = \"none\";\n    const subject = document.getElementById(\"subjectform\").value;\n    const topic = document.getElementById(\"topicform\").value;\n    const duration = document.getElementById(\"durationform\").value;\n    const discussionMaterial = document.getElementById(\"discmaterial\").value;\n    const place = document.getElementById(\"placeform\").value;\n    const maxattend = document.getElementById(\"maxattend\").value;\n\n    if (subject === \"\" || topic === \"\" || duration === \"\" || discussionMaterial === \"\" || place === \"\" || maxattend === \"\") {\n      document.getElementById(\"discerror\").style.display = \"inline-block\";\n    } else {\n      axios.post(\"http://localhost:5000/topics/add\", {\n        topic_name: topic,\n        subject: subject,\n        discussion_material: discussionMaterial,\n        author: props.match.params.id.slice(3)\n      }).then(resp => {\n        axios.get(\"http://localhost:5000/topics/\" + props.match.params.id.slice(3) + \"/\" + subject).then(res => {\n          let topic = res.data[res.data.length - 1];\n          let new_topic_id = topic._id;\n          axios.post(\"http://localhost:5000/discussions/add\", {\n            place: place,\n            start_time: date,\n            duration: duration,\n            max_attendees: maxattend,\n            present_attendees: [],\n            topic: new_topic_id,\n            status: \"pending\"\n          }).then(resppp => {\n            props.history.push(\"/selection/\" + props.match.params.id);\n          });\n        });\n      });\n    }\n\n    e.preventDefault();\n  }\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"subjectform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Subject\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"subjectform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, subjectOptions)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"topicform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Topic\"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"topicform\",\n    rows: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"durationform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Duration\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"durationform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"30 mins\"), React.createElement(\"option\", {\n    value: \"60\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"1 hour\"), React.createElement(\"option\", {\n    value: \"90\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"1.5 hours\"), React.createElement(\"option\", {\n    value: \"120\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"2 hours\"))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"placeform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Place\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"placeform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, placeOptions)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"maxattend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Max Attendees\"), React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"maxattend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"2\"), React.createElement(\"option\", {\n    value: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"3\"), React.createElement(\"option\", {\n    value: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"4\"), React.createElement(\"option\", {\n    value: \"5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"5\"), React.createElement(\"option\", {\n    value: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"6\"))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"discmaterial\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Discussion material\"), React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"discmaterial\",\n    rows: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"react-datetime-picker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Time: \"), React.createElement(DateTimePicker, {\n    onChange: setDate,\n    value: date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Submit\")), React.createElement(\"div\", {\n    id: \"discerror\",\n    style: {\n      display: \"none\",\n      height: \"3vh\",\n      width: \"100%\",\n      borderRadius: \"1vh\",\n      backgroundColor: \"red\",\n      color: \"white\",\n      lineHeight: \"3vh\",\n      fontSize: \"2vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Error.. Invalid data\"));\n}\n\nexport default NewDisc;","map":{"version":3,"sources":["/Users/akshaykulkarni/Documents/stutor/stutor/src/components/NewDisc/NewDisc.js"],"names":["React","useState","useEffect","axios","DateTimePicker","NewDisc","props","newSubjectOptions","newPlaces","subjectOptions","setSubjectOptions","placeOptions","setPlaceOptions","date","setDate","Date","userData","setUserData","get","match","params","id","slice","then","userResp","data","branch","res","subjectIds","subjects","retreiveSubdata","Promise","resolve","reject","forEach","sId","index","sres","push","_id","subject_name","subject_code","length","retreivePlaces","college","resp","place","handleSubmit","e","document","getElementById","style","display","subject","value","topic","duration","discussionMaterial","maxattend","post","topic_name","discussion_material","author","new_topic_id","start_time","max_attendees","present_attendees","status","resppp","history","preventDefault","height","width","borderRadius","backgroundColor","color","lineHeight","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AACnB,MAAIC,iBAAiB,GAAG,EAAxB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,QAAK,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAK,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAIc,IAAJ,EAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACVC,IAAAA,KAAK,CAACe,GAAN,CAAU,uCAAuCZ,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,CAA5B,CAAjD,EACCC,IADD,CACMC,QAAQ,IAAG;AACbP,MAAAA,WAAW,CAACO,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAX;AACAtB,MAAAA,KAAK,CAACe,GAAN,CAAU,oCAAoCM,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,MAA/D,EACCH,IADD,CACMI,GAAG,IAAE;AACP,YAAIC,UAAU,GAAGD,GAAG,CAACF,IAAJ,CAAS,CAAT,EAAYI,QAA7B;;AACA,uBAAeC,eAAf,GAAgC;AAC5B,iBAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClCL,YAAAA,UAAU,CAACM,OAAX,CAAmB,CAACC,GAAD,EAAMC,KAAN,KAAc;AAC7BjC,cAAAA,KAAK,CAACe,GAAN,CAAU,oCAAoCiB,GAA9C,EACCZ,IADD,CACMc,IAAI,IAAE;AACR9B,gBAAAA,iBAAiB,CAAC+B,IAAlB,CAAuB;AAAQ,kBAAA,GAAG,EAAED,IAAI,CAACZ,IAAL,CAAU,CAAV,EAAac,GAA1B;AAA+B,kBAAA,KAAK,EAAEF,IAAI,CAACZ,IAAL,CAAU,CAAV,EAAac,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyDF,IAAI,CAACZ,IAAL,CAAU,CAAV,EAAae,YAAb,GAA4B,GAA5B,GAAkCH,IAAI,CAACZ,IAAL,CAAU,CAAV,EAAagB,YAAxG,CAAvB;;AACA,oBAAGL,KAAK,KAAGR,UAAU,CAACc,MAAX,GAAkB,CAA7B,EAA+B;AAC3BhC,kBAAAA,iBAAiB,CAACH,iBAAD,CAAjB;AACAyB,kBAAAA,OAAO,CAAC,MAAD,CAAP;AACH;AACJ,eAPD;AAQH,aATD;AAUH,WAXM,CAAP;AAYH;;AACD,uBAAeW,cAAf,GAA+B;AAC3B,iBAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClC9B,YAAAA,KAAK,CAACe,GAAN,CAAU,4CAA4CM,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBmB,OAAvE,EACCrB,IADD,CACMsB,IAAI,IAAE;AACRA,cAAAA,IAAI,CAACpB,IAAL,CAAUS,OAAV,CAAkB,CAACY,KAAD,EAAQV,KAAR,KAAgB;AAC9B5B,gBAAAA,SAAS,CAAC8B,IAAV,CAAe;AAAQ,kBAAA,GAAG,EAAEQ,KAAK,CAACP,GAAnB;AAAwB,kBAAA,KAAK,EAAEO,KAAK,CAACP,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA2CO,KAAK,CAACA,KAAjD,CAAf;;AACA,oBAAGV,KAAK,KAAGS,IAAI,CAACpB,IAAL,CAAUiB,MAAV,GAAiB,CAA5B,EAA8B;AAC1B9B,kBAAAA,eAAe,CAACJ,SAAD,CAAf;AACAwB,kBAAAA,OAAO,CAAC,MAAD,CAAP;AACH;AACJ,eAND;AAOH,aATD;AAUH,WAXM,CAAP;AAYH;;AACDF,QAAAA,eAAe;AACfa,QAAAA,cAAc;AACjB,OAjCD;AAkCH,KArCD;AAsCH,GAvCQ,EAuCN,EAvCM,CAAT;;AAyCA,WAASI,YAAT,CAAsBC,CAAtB,EAAwB;AACpBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,OAA3C,GAAmD,MAAnD;AACA,UAAMC,OAAO,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCI,KAAvD;AACA,UAAMC,KAAK,GAAGN,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCI,KAAnD;AACA,UAAME,QAAQ,GAAGP,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCI,KAAzD;AACA,UAAMG,kBAAkB,GAAGR,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCI,KAAnE;AACA,UAAMR,KAAK,GAAGG,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCI,KAAnD;AACA,UAAMI,SAAS,GAAGT,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCI,KAAvD;;AACA,QAAGD,OAAO,KAAG,EAAV,IAAcE,KAAK,KAAG,EAAtB,IAA0BC,QAAQ,KAAG,EAArC,IAAyCC,kBAAkB,KAAG,EAA9D,IAAmEX,KAAK,KAAG,EAA3E,IAA+EY,SAAS,KAAG,EAA9F,EAAiG;AAC7FT,MAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,OAA3C,GAAmD,cAAnD;AACH,KAFD,MAGI;AACAjD,MAAAA,KAAK,CAACwD,IAAN,CAAW,kCAAX,EAA+C;AAC3CC,QAAAA,UAAU,EAACL,KADgC;AAE3CF,QAAAA,OAAO,EAACA,OAFmC;AAG3CQ,QAAAA,mBAAmB,EAACJ,kBAHuB;AAI3CK,QAAAA,MAAM,EAAExD,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,CAA5B;AAJmC,OAA/C,EAMCC,IAND,CAMMsB,IAAI,IAAE;AACR1C,QAAAA,KAAK,CAACe,GAAN,CAAU,kCAAkCZ,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,CAA5B,CAAlC,GAAoE,GAApE,GAA0E+B,OAApF,EACC9B,IADD,CACMI,GAAG,IAAE;AACP,cAAI4B,KAAK,GAAG5B,GAAG,CAACF,IAAJ,CAASE,GAAG,CAACF,IAAJ,CAASiB,MAAT,GAAgB,CAAzB,CAAZ;AACA,cAAIqB,YAAY,GAACR,KAAK,CAAChB,GAAvB;AACApC,UAAAA,KAAK,CAACwD,IAAN,CAAW,uCAAX,EAAoD;AAChDb,YAAAA,KAAK,EAACA,KAD0C;AAEhDkB,YAAAA,UAAU,EAACnD,IAFqC;AAGhD2C,YAAAA,QAAQ,EAAEA,QAHsC;AAIhDS,YAAAA,aAAa,EAAEP,SAJiC;AAKhDQ,YAAAA,iBAAiB,EAAE,EAL6B;AAMhDX,YAAAA,KAAK,EAAEQ,YANyC;AAOhDI,YAAAA,MAAM,EAAE;AAPwC,WAApD,EASC5C,IATD,CASM6C,MAAM,IAAE;AACV9D,YAAAA,KAAK,CAAC+D,OAAN,CAAc/B,IAAd,CAAmB,gBAAchC,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC,EAApD;AACH,WAXD;AAYH,SAhBD;AAiBH,OAxBD;AAyBH;;AACD2B,IAAAA,CAAC,CAACsB,cAAF;AACH;;AAED,SAAO;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAM,IAAA,QAAQ,EAAEvB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,EAAE,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtC,cADL,CAFJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAU,IAAA,SAAS,EAAC,cAApB;AAAmC,IAAA,EAAE,EAAC,WAAtC;AAAkD,IAAA,IAAI,EAAC,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAPJ,EAWI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,EAAE,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CAFJ,CAXJ,EAoBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,EAAE,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,YADL,CAFJ,CApBJ,EA0BI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,EAAE,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,EAII;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,EAKI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ,CAFJ,CA1BJ,EAoCI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAU,IAAA,SAAS,EAAC,cAApB;AAAmC,IAAA,EAAE,EAAC,cAAtC;AAAqD,IAAA,IAAI,EAAC,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CApCJ,EAwCI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEG,OAA1B;AAAmC,IAAA,KAAK,EAAED,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAxCJ,EA4CI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CJ,CADG,EA+CH;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,KAAK,EAAE;AAACuC,MAAAA,OAAO,EAAC,MAAT;AAAiBmB,MAAAA,MAAM,EAAC,KAAxB;AAA+BC,MAAAA,KAAK,EAAC,MAArC;AAA6CC,MAAAA,YAAY,EAAC,KAA1D;AAAiEC,MAAAA,eAAe,EAAC,KAAjF;AAAwFC,MAAAA,KAAK,EAAC,OAA9F;AAAuGC,MAAAA,UAAU,EAAC,KAAlH;AAAwHC,MAAAA,QAAQ,EAAC;AAAjI,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BA/CG,CAAP;AAiDH;;AAED,eAAexE,OAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./NewDisc.css\";\nimport axios from \"axios\";\nimport DateTimePicker from 'react-datetime-picker';\n\nfunction NewDisc(props){\n    let newSubjectOptions = []\n    let newPlaces = []\n    const[subjectOptions, setSubjectOptions] = useState([]);\n    const[placeOptions, setPlaceOptions] = useState([]);\n    const [date, setDate] = useState(new Date());\n    const [userData, setUserData] = useState({});\n    useEffect(()=>{\n        axios.get(\"http://localhost:5000/users/getId/\" + props.match.params.id.slice(3,))\n        .then(userResp=> {\n            setUserData(userResp.data[0]);\n            axios.get(\"http://localhost:5000/branches/\" + userResp.data[0].branch)\n            .then(res=>{\n                let subjectIds = res.data[0].subjects;\n                async function retreiveSubdata(){\n                    return new Promise((resolve, reject)=>{\n                        subjectIds.forEach((sId, index)=>{\n                            axios.get(\"http://localhost:5000/subjects/\" + sId)\n                            .then(sres=>{\n                                newSubjectOptions.push(<option key={sres.data[0]._id} value={sres.data[0]._id}>{sres.data[0].subject_name + \"-\" + sres.data[0].subject_code}</option>);\n                                if(index===subjectIds.length-1){\n                                    setSubjectOptions(newSubjectOptions);\n                                    resolve(\"done\");\n                                }\n                            })\n                        })\n                    })\n                }\n                async function retreivePlaces(){\n                    return new Promise((resolve, reject)=>{\n                        axios.get(\"http://localhost:5000/places/getPlaces/\" + userResp.data[0].college)\n                        .then(resp=>{\n                            resp.data.forEach((place, index)=>{\n                                newPlaces.push(<option key={place._id} value={place._id}>{place.place}</option>);\n                                if(index===resp.data.length-1){\n                                    setPlaceOptions(newPlaces);\n                                    resolve(\"done\");\n                                }\n                            })\n                        })\n                    })\n                }\n                retreiveSubdata();\n                retreivePlaces();\n            })\n        })\n    }, []);\n    \n    function handleSubmit(e){\n        document.getElementById(\"discerror\").style.display=\"none\";\n        const subject = document.getElementById(\"subjectform\").value;\n        const topic = document.getElementById(\"topicform\").value;\n        const duration = document.getElementById(\"durationform\").value;\n        const discussionMaterial = document.getElementById(\"discmaterial\").value;\n        const place = document.getElementById(\"placeform\").value;\n        const maxattend = document.getElementById(\"maxattend\").value;\n        if(subject===\"\"||topic===\"\"||duration===\"\"||discussionMaterial===\"\" ||place===\"\"||maxattend===\"\"){\n            document.getElementById(\"discerror\").style.display=\"inline-block\";\n        }\n        else{\n            axios.post(\"http://localhost:5000/topics/add\", {\n                topic_name:topic,\n                subject:subject,\n                discussion_material:discussionMaterial,\n                author: props.match.params.id.slice(3,)\n            })\n            .then(resp=>{\n                axios.get(\"http://localhost:5000/topics/\" + props.match.params.id.slice(3,) + \"/\" + subject)\n                .then(res=>{\n                    let topic = res.data[res.data.length-1];\n                    let new_topic_id=topic._id;\n                    axios.post(\"http://localhost:5000/discussions/add\", {\n                        place:place,\n                        start_time:date,\n                        duration: duration,\n                        max_attendees: maxattend,\n                        present_attendees: [],\n                        topic: new_topic_id,\n                        status: \"pending\"\n                    })\n                    .then(resppp=>{\n                        props.history.push(\"/selection/\"+props.match.params.id);\n                    })\n                })\n            })\n        }\n        e.preventDefault();\n    }\n\n    return <div className=\"container\">\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"subjectform\">Subject</label>\n                <select className=\"form-control\" id=\"subjectform\">\n                    {subjectOptions}\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"topicform\">Topic</label>\n                <textarea className=\"form-control\" id=\"topicform\" rows=\"1\"></textarea>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"durationform\">Duration</label>\n                <select className=\"form-control\" id=\"durationform\">\n                    <option value=\"30\">30 mins</option>\n                    <option value=\"60\">1 hour</option>\n                    <option value=\"90\">1.5 hours</option>\n                    <option value=\"120\">2 hours</option>\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"placeform\">Place</label>\n                <select className=\"form-control\" id=\"placeform\">\n                    {placeOptions}\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"maxattend\">Max Attendees</label>\n                <select className=\"form-control\" id=\"maxattend\">\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                </select>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"discmaterial\">Discussion material</label>\n                <textarea className=\"form-control\" id=\"discmaterial\" rows=\"3\"></textarea>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"react-datetime-picker\" >Time: </label>\n                <DateTimePicker onChange={setDate} value={date} />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n        </form>\n        <div id=\"discerror\" style={{display:\"none\", height:\"3vh\", width:\"100%\", borderRadius:\"1vh\", backgroundColor:\"red\", color:\"white\", lineHeight:\"3vh\",fontSize:\"2vh\"}}>Error.. Invalid data</div>\n    </div>\n}\n\nexport default NewDisc;"]},"metadata":{},"sourceType":"module"}