{"ast":null,"code":"var _jsxFileName = \"/Users/akshaykulkarni/Documents/stutor/stutor/src/components/AllDiscs/AllDiscs.js\";\nimport React, { useState } from \"react\";\nimport \"./AllDiscs.css\";\nimport axios from \"axios\";\n\nfunction AllDiscs(props) {\n  let userId = props.match.params.id.slice(3);\n  let places = [];\n  let discussions = [];\n  const [allData, setAllData] = useState({});\n\n  async function retreiveAllPending() {\n    return new Promise((resolve, reject) => {\n      axios.get(\"http://localhost:5000/users/getId/\" + userId).then(resp => {\n        axios.get(\"http://localhost:5000/places/getPlaces/\" + resp.data[0].college).then(res => {\n          res.data.forEach(place => {\n            places.push(place.place);\n            discussions.push([]);\n            axios.get(\"http://localhost:5000/discussions/getPending/\" + place._id).then(pendingDiscs => {\n              pendingDiscs.data.forEach(disc => {\n                axios.get(\"http://localhost:5000/topics/\" + disc.topic).then(top => {\n                  if (top.data.length === 0) {\n                    discussions[discussions.length - 1].push({});\n                  } else {\n                    let obj = {\n                      start: disc.start_time,\n                      duration: disc.duration,\n                      max_attendees: disc.max_attendees,\n                      topic_name: top.data[0].topic_name,\n                      author: top.data[0].author,\n                      discussion: top.data[0].discussion_material,\n                      subject: top.data[0].subject\n                    };\n                    discussions[discussions.length - 1].push(obj);\n                  }\n\n                  if (discussions.length === res.data.length && discussions[discussions.length - 1].length === pendingDiscs.data.length) {\n                    setAllData({\n                      places: places,\n                      discussion: discussions\n                    });\n                    resolve(\"done\");\n                  }\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  }\n\n  retreiveAllPending();\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"join-all-pending\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }));\n}\n\nexport default AllDiscs;","map":{"version":3,"sources":["/Users/akshaykulkarni/Documents/stutor/stutor/src/components/AllDiscs/AllDiscs.js"],"names":["React","useState","axios","AllDiscs","props","userId","match","params","id","slice","places","discussions","allData","setAllData","retreiveAllPending","Promise","resolve","reject","get","then","resp","data","college","res","forEach","place","push","_id","pendingDiscs","disc","topic","top","length","obj","start","start_time","duration","max_attendees","topic_name","author","discussion","discussion_material","subject"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport \"./AllDiscs.css\";\nimport axios from \"axios\";\n\nfunction AllDiscs(props){\n\n    let userId=props.match.params.id.slice(3,);\n    let places=[]\n    let discussions = []\n    const [allData, setAllData] = useState({})\n    async function retreiveAllPending(){\n        return new Promise((resolve, reject)=>{\n            axios.get(\"http://localhost:5000/users/getId/\"+userId)\n            .then(resp=>{\n                axios.get(\"http://localhost:5000/places/getPlaces/\" + resp.data[0].college)\n                .then(res=>{\n                    res.data.forEach(place=>{\n                        places.push(place.place);\n                        discussions.push([]);\n                        axios.get(\"http://localhost:5000/discussions/getPending/\" + place._id)\n                        .then(pendingDiscs=>{\n                            pendingDiscs.data.forEach(disc=>{\n                                axios.get(\"http://localhost:5000/topics/\"+disc.topic)\n                                .then(top=>{\n                                    if(top.data.length===0){\n                                        discussions[discussions.length-1].push({});\n                                    }\n                                    else{\n                                        let obj = {start: disc.start_time, duration:disc.duration, max_attendees:disc.max_attendees,topic_name :top.data[0].topic_name,\n                                            author : top.data[0].author,discussion : top.data[0].discussion_material,subject : top.data[0].subject}\n                                        discussions[discussions.length-1].push(obj);\n                                    }\n                                    if(discussions.length===res.data.length && discussions[discussions.length-1].length===pendingDiscs.data.length){\n                                        setAllData({places:places, discussion:discussions});\n                                        resolve(\"done\");\n                                    }\n                                })\n                            })\n                        })\n                    })\n                })\n            })\n        })\n    }\n\n    retreiveAllPending();\n\n    \n\n\n    return <div className=\"container\">\n        <div className=\"join-all-pending\"></div>\n    </div>\n}\n\nexport default AllDiscs;"]},"metadata":{},"sourceType":"module"}